<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright 2008, Ruboss Technology Corporation.

 This software is dual-licensed under both the terms of the Ruboss Commercial
 License v1 (RCL v1) as published by Ruboss Technology Corporation and under
 the terms of the GNU General Public License v3 (GPL v3) as published by the
 Free Software Foundation.

 Both the RCL v1 (rcl-1.0.txt) and the GPL v3 (gpl-3.0.txt) are included in
 the source code. If you have purchased a commercial license then only the
 RCL v1 applies; otherwise, only the GPL v3 applies. To learn more or to buy a
 commercial license, please go to http://ruboss.com.
-->
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml">
<mx:Metadata>
  [Event("change")]
</mx:Metadata>
<mx:Script><![CDATA[
  import mx.collections.ArrayCollection;
  import org.ruboss.collections.RubossCollection;
  import org.ruboss.Ruboss;

  [Bindable]
  public var radioItems:Array;
  
  [Bindable]
  public var comboItems:RubossCollection;
  
  [Bindable]
  public var matchField:String;
  
  [Bindable]
  public var comboPrompt:String = "Select one...";
  
  [Bindable]
  public var comboWidth:int = 200;
  
  [Bindable]
  public var selectedItem:Object;
  
  private function getRadioButtonItems(radioItems:Array, comboItems:RubossCollection):ArrayCollection {
    if (radioItems == null || comboItems == null) return null;
    if (matchField == null) {
      return new ArrayCollection(radioItems);
    } else {
      var retval:ArrayCollection = new ArrayCollection();
      for (var i:int = 0; i < radioItems.length; i++) {
        retval.addItem(comboItems.withPropertyValue(matchField, radioItems[i]));
      }
      return retval;
    }
  }
  
  private function onRadioButtonClick(event:Event):void {
    comboBox.selectedIndex = -1;
    selectedItem = radioButtonGroup.selectedValue;
    dispatchEvent(new Event("change"));
  }
  
  private function onComboBoxChange(event:Event):void {
    selectedItem = comboBox.selectedItem;
  }
  
  private function filterRadioItems(obj:Object):Boolean {
    var searchKey:Object = (matchField == null) ? obj : obj[matchField];
    return radioItems.indexOf(searchKey) < 0;
  }
]]></mx:Script>
  <mx:RadioButtonGroup id="radioButtonGroup"/>
  <mx:Repeater id="rp" dataProvider="{getRadioButtonItems(radioItems, comboItems)}">
    <mx:RadioButton label="{rp.currentItem}" value="{rp.currentItem}" group="{radioButtonGroup}" click="onRadioButtonClick(event);"/>
  </mx:Repeater>
  <mx:RadioButton id="comboRB" label="" value="{null}" group="{radioButtonGroup}" click="onRadioButtonClick(event);"/>
  <mx:ComboBox id="comboBox" dataProvider="{Ruboss.filter(comboItems, filterRadioItems)}" prompt="{comboPrompt}" enabled="{comboRB.selected}"
    width="{comboWidth}" change="onComboBoxChange(event);"/>
</mx:HBox>